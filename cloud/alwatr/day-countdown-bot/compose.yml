networks:
  internal:
  alwatr-public-network:
    name: alwatr-public-network
    external: true

services:
  storage-server:
    image: $STORAGE_SERVER_IMAGE

    cpu_count: 1
    cpu_shares: 1024
    mem_limit: 256m

    stop_grace_period: 30s

    restart: unless-stopped

    networks:
      internal:
        aliases:
          - '${APP_ID}-storage-server'

    environment:
      - STORAGE_PATH=/storage
      - ACCESS_TOKEN=${STORAGE_ACCESS_TOKEN}
      - ALWATR_DEBUG=${STORAGE_SERVER_DEBUG:-}

    volumes:
      - type: bind
        source: ./_data/storage
        target: /storage
        bind:
          create_host_path: true

    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '2'

  telegram-bot:
    image: $TELEGRAM_BOT_IMAGE

    cpu_shares: 1024
    mem_limit: 256m

    restart: unless-stopped

    networks:
      internal:
      alwatr-public-network:

    environment:
      - STORAGE_HOST=${APP_ID}-storage-server
      - STORAGE_PORT=80
      - STORAGE_TOKEN=${STORAGE_ACCESS_TOKEN}
      - telegramBotToken=${telegramBotToken}
      - telegramBotWebhookDomain=${telegramBotWebhookDomain}
      - telegramBotUsername=${telegramBotUsername}
      - ADMIN_TOKEN=${ADMIN_TOKEN}
      - ALWATR_DEBUG=${TELEGRAM_BOT_DEBUG:-}

    volumes:
      - type: bind
        source: ./_data/storage
        target: /storage
        bind:
          create_host_path: true

    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '2'

    labels:
      traefik.enable: true
      traefik.port: 80
      traefik.frontend.rule: Host:${telegramBotWebhookDomain}
      traefik.frontend.entryPoints: http, https
      traefik.frontend.redirect.entryPoint: https
